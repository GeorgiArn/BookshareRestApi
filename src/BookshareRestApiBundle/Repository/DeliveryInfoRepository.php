<?php

namespace BookshareRestApiBundle\Repository;

use BookshareRestApiBundle\Entity\City;
use BookshareRestApiBundle\Entity\CourierService;
use BookshareRestApiBundle\Entity\DeliveryInfo;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\Mapping;
use Doctrine\ORM\OptimisticLockException;
use Doctrine\ORM\ORMException;

/**
 * DeliveryInfoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DeliveryInfoRepository extends \Doctrine\ORM\EntityRepository
{
    public function __construct(EntityManagerInterface $em,
                                Mapping\ClassMetadata $metadata = null)
    {
        parent::__construct($em,
            $metadata == null ?
                new Mapping\ClassMetadata(DeliveryInfo::class) :
                $metadata
        );
    }

    public function findAllCitiesByCourierService(CourierService $courierService) {
        return
            $this
                ->createQueryBuilder('delivery_info')
                ->leftJoin('delivery_info.courierService', 'courierService')
                ->leftJoin('delivery_info.city', 'city')
                ->where('courierService.id = :id')
                ->setParameter('id', $courierService->getId())
                ->groupBy('delivery_info.city')
                ->getQuery()
                ->getResult();
    }

    public function findAllAddressesByCityAndCourier(City $city, CourierService $courier) {
        return
            $this
                ->createQueryBuilder('delivery_info')
                ->leftJoin('delivery_info.city', 'city')
                ->leftJoin('delivery_info.courierService', 'courier')
                ->where('city.id = :cityId AND courier.id = :courierId')
                ->setParameter('cityId', $city->getId())
                ->setParameter('courierId', $courier->getId())
                ->getQuery()
                ->getResult();
    }
}
